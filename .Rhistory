plot(x, z, pch = 19)
par(mfrow = c(2, 2))
plot(x, y)
plot(x, z)
plot(z, x)
plot(y, x)
par(mfcol = c(2, 2))
plot(x, y)
plot(x, z)
plot(z, x)
plot(y, x)
par(mfrow = c(1, 1))
x <- rnorm(100)
y<- x + rnorm(100)
g <- gl(2, 50, labels = c("Male", "Female"))
str(g)
plot(x, y)
plot(x, y, type = "n")
points(x[g == "Male"], y[g =="Male"], col = "green")
points(x[g == "Female"], y[g =="Female"], col = "blue", pch = 19)
library(lattice)
package ? lattice
library(help = lattice)
data(environmental)
?environmental
head(environmental)
library(lattice)
xyplot(ozone ~ radiation, data = environmental)
xyplot(ozone ~ radiation, data = environmental, main = "Ozone vs. Radiation")
xyplot(ozone ~ temperatur, data = environmental)
xyplot(ozone ~ temperature, data = environmental)
summary(environmental$temperature)
temp.cut <- equal.count(environmental$temperature, 4)
temp.cut
xyplot(ozone ~ radiation | temp.cut, data = environmental)
xyplot(ozone ~ radiation | temp.cut, data = environmental, layout = c(1, 4))
xyplot(ozone ~ radiation | temp.cut, data = environmental, layout = c(1, 4), as.table = TRUE)
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE)
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE,
panel = function(x, y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit)
})
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE, pch = 20
panel = function(x, y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit, lmd = 2)
})
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE, pch = 20,
panel = function(x, y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit, lmd = 2)
})
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE, pch = 20,
panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.loess(x, y)
})
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE, pch = 20,
panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.loess(x, y)
}, xlab = "Solar Radiation", ylab = "Ozone",
main = "Ozone vs. Solar Radiation")
wind.cut <- equal.count(environmental$wind, 4)
wind.cut
wind.cut <- equal.count(environmental$wind, 4)
wind.cut
xyplot(ozone ~ radiation | temp.cut * wind.cut, data = environmental, as.table = TRUE, pch = 20,
panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.loess(x, y)
}, xlab = "Solar Radiation", ylab = "Ozone",
main = "Ozone vs. Solar Radiation")
splom(~ environmental)
histogram(~ temperature, data = environmental)
histogram(~ temperature | wind.cut, data = environmental)
histogram(~ ozone | wind.cut, data = environmental)
histogram(~ ozone | temp.cut * wind.cut, data = environmental)
axis()
gzfile()
points()
pdf()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
BodyWeight
set.seed(1)
rpois(5,2)
r <- rgb(1,1,1, 0.2)
r
grey()
grep()
setOldClass()
?setOldClass()
set.seed(31);
heightsCM = rnorm(30,mean=188, sd=5);
weightsK = rnorm(30,mean=84,sd=3);
hasDaughter = sample(c(TRUE,FALSE),size=30,replace=T);
dataFrame = data.frame(heightsCM,weightsK,hasDaughter);
dataFrameSubset <- subset(data.frame, heightsCM > 188)
dataFrameSubset <- subset(dataFrame, heightsCM > 188)
mean(dataFrameSubset$weightK)
as.numeric(dataFrameSubset$weightK)
mean(dataFrameSubset$weightK)
mean(as.numeric(dataFrameSubset$weightK))
dataFrame
class(dataFrame$weightsK)
dataFrameSubset <- subset(dataFrame, heightsCM > 188, select = weightsK)
mean(dataFrame$weightsK)
set.seed(31);
heightsCM = rnorm(30,mean=188, sd=5);
weightsK = rnorm(30,mean=84,sd=3);
hasDaughter = sample(c(TRUE,FALSE),size=30,replace=T);
dataFrame = data.frame(heightsCM,weightsK,hasDaughter);
dataFrameSubset <- subset(dataFrame, heightsCM >188, select = heightsCM:hasDaughter)
mean(dataFrameSubset$weightsK)
set.seed(41)
cauchyValues <- rcauchy(100)
set.seed(415)
vec <- sample(cauchyValues, 10, replace = TRUE)
vec
random[1,10]
rand[1,10]
x <- sample(1:16, 8)
x
install.packages(phylotools)
install.packages(phytools)
install.packages("phytools")
library(phytools)
install.packages("phytotools")
source('~/Desktop/Coursera/Statistics One Fall2013 Princeton/Week11/Lab11/Stats1.13.Lab.11.R')
getwd()
setwd("Users/Maomao/desktop/study")
setwd("Users/Maomao/Desktop/study")
getwd()
read.tree("phyliptree.phy")
library(phytools)
read.tree("phyliptree.phy")
tree <- read.tree("phyliptree.phy")
plotTree(tree)
plot(tree, type = "phylogram", show.node.label = TRUE, tip.color = "blue")
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3 )
>
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1 )
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 2 )
plot(tree, type = "unrooted", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1 )
plot(tree, type = "fan", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1 )
tree$tip.label
tree$tip.label <- list("Poa supina", "Poa infirma", "Poa annua", "Brachypodium distachyon", "Oryza sativa", "Arabidopsis thaliana")
plotTree(tree)
tree$node.label[2] <- vector("BEPclade")
tree$node.label[2] <- "BEPclade"
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1 )
#draw tree
getwd()
library(phytools)
tree <- read.tree("phyliptree.phy")
tree$tip.label <- list("Poa infirma", "Poa annua", "Poa supina", "Brachypodium distachyon", "Oryza sativa", "Arabidopsis thaliana")
tree$node.label[2] <- "BEPclade"
plotTree(tree)
plot(tree, type = "phylogram", show.node.label = TRUE, tip.color = "blue")
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3 )
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1 )
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 2 )
getwd()
library(phytools)
tree <- read.tree("phyliptree.phy")
tree$tip.label <- list("Poa infirma", "Poa annua", "Poa supina", "Brachypodium distachyon", "Oryza sativa", "Arabidopsis thaliana")
tree$node.label[2] <- "BEPclade"
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1 )
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1, cex = 0.5)
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1, cex = 1)
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1, cex = 1.2)
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1, cex = 1)
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1, cex = 2)
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1, cex = 3.5)
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1, cex = 5)
plot(tree, type = "cladogram", show.node.label = TRUE, tip.color = "blue", font = 3, node.pos = 1, cex = 6)
x <- rnorm(50)
y <- runif(30)
ks.test(x, y)
getwd()
tabulate(1:5)
tabulate(c(1,2,3))
tabulate(c(1,2,3),nbins=3)
tabulate(factor(letters[1:10]))
a <- list()
a[1]
a[1[2]]
a <- list(x = c(1,2,3), y= c(4,5))
a
a[1]
a[1][2]
a[1[2]]
a[1,2]
lib_names <- c("I1", "I2", "I3", "S1", "S2", "S3", "P1", "P2", "P3", "A1", "A2", "A3")
redun_libs <- list(redun_I1, redun_I2, redun_I3, redun_S1, redun_S2, redun_S3,
redun_P1, redun_P2, redun_P3, redun_A1, redun_A2, redun_A3)
a <- list (b,mk,l)
a <- list(b = c(j,k))
a <- list(b = c("j",34))
a
m <- list(p,ie)
redun_libs <- list()
a <- c(1,2,3)
b<- c(1,2,3)
ks.test(a,b)
c<- c(4,5,6)
ks.test(a,c)
d <- c(100,900,0.1)
ks.test(a,d)
library(cramer)
a<-c(1:10)
b<-c(1,3,4,2)
cramer.test(a,b)
library(Matching)
install.packages(kSamples)
install.packages("kSamples")
library(kSamples)
ad.test(c(1,2,3,4,5), c(3,4,5,2,3,4,5,2,))
ad.test(c(1,2,3,4,5), c(3,4,5,2,3,4,5,2))
library(lsr)
data <- data.frame("a"<-c(1,2,3,4,5), "b"<-c(3,5,9,12,32))
cramersV(data)
data2<-data.frame("c"<-c(10,20,30,40,50),"d"<-c(30,50,90,120,320))
cramersV(data2)
data3<-cbind(a,d)
cramersV(data3)
chisq.test(data)
chisq.test(data2)
chisq.test(data3)
View(data)
View(data2)
View(data3)
View(data)
View(data2)
View(data3)
x <- 4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x<-1:4
y<-2
x+y
setwd("Users/Maomao/Desktop/Coursera/R programming Spring2014 JHU/quiz")
getwd()
setwd(Users/Maomao/Desktop/Coursera/R programming Spring2014 JHU/quiz)
setwd("Users/Maomao/Desktop/Coursera/R programming Spring2014 JHU/quiz")
install.packages("swirl")
library(swirl)
swirl()
5 +7
x <- 5+7
x
y <- x-3
y
a <- c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z / mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:10
15:1?
swirl()
15:1?
library(swirl)
swirl()
15:
1?
2
packageVersion("swirl")
library(swirl)
swirl()
15:1
?`:`
seq(1,20)
seq(0, 10, by = 0.5)
my_seq = seq(5, 10, length = 30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- (num_vect <1)
tf = num_vect<1
tf <- num_vect<1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "maomao")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep = "-")
x <-c(44, NA, 5, NA)
x *3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y, z),100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf = Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)<- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4, 5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(myMatrix, myMatrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myData
source("http://bioconductor.org/biocLite.R")
biocLite()
quit()
library(KernSmooth)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(datasets)
data(iris)
?iris
m <- split(iris,Species)
m <- split(iris, iris$Species)
mean(m[[3]]$Sepal.Length)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
t(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
82.63636-209.21429
debug(ls)
ls
debug(mean)
mean(mtcars$cyl)
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
install.packages("RMySQL")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
setwd("~/Desktop/Coursera/Reproducible research spring2014 JHU/project1")
data <- read.csv("activity.csv")
data$date <- as.Date(data$date,"%Y-%m-%d")
daily_step <- tapply(data$steps, data$date, sum, na.rm = TRUE)
hist(daily_step,breaks = 10, col = "lightblue", main = "histogram of total steps per day", xlab = "number of steps per day")
daily_step_mean <- mean(daily_step)
daily_step_median <- median(daily_step)
mean_inter_step <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
plot(unique(data$interval), mean_inter_step, type = "l", col="blue", main = "average daily activity pattern",
xlab = "interval", ylab = "average steps")
max_interval <- data$interval[which.max(mean_inter_step)]
summary(data)[7,1]
library(reshape2)
library(plyr)
data2 <- ddply(data, .(interval), function(df){
df$steps[is.na(df$steps)] <- mean(df$steps, na.rm=TRUE)
return (df)
})
data3 <- data2[order(data2$Date),]
data3 <- data2[order(data2$date),]
data3 <- data[order(data$interval),]
View(data2)
View(data3)
daily_step2 <- tapply(data2$steps, data2$date, sum, na.rm = TRUE)
hist(daily_step2,breaks = 10, col = "lightblue", main = "histogram of total steps per day (NA filled)", xlab = "number of steps per day")
daily_step2_mean <- mean(daily_step2)
daily_step2_median <- median(daily_step2)
weekdays(as.Date("2014-02-04"))
is.weekend(as.Date("2014-02-04"))
library(chron)
is.weekend(as.Date("2014-02-04"))
install.packages("lubridates")
install.packages("lubridate")
data2$days <- weekdays(data2$date)
library(chron)
data2$days[is.weekend(data2$days)] <- factor("weekend")
data2$dasy[!is.weekend(data2$days)] <- factor("weekday")
library(chron)
data2$days[is.weekend(data2$date)] <- factor("weekend")
data2$dasy[!is.weekend(data2$date)] <- factor("weekday")
library(chron)
data2$days[is.weekend(data2$date)] <- factor("weekend")
data2$days[!is.weekend(data2$date)] <- factor("weekday")
data2$days <- factor()
data2$days <- factor(nrow(data2))
library(chron)
data2$days[is.weekend(data2$date)] <- "weekend"
data2$days[!is.weekend(data2$date)] <- "weekday"
data2$days <- factor(c("weekend","weekday"),nrow(data2))
data2$days[is.weekend(data2$date)] <- "weekend"
data2$days[!is.weekend(data2$date)] <- "weekday"
data2$days <- vector(NA, length = nrow(data2))
data2$days <- factor(c("weekend","weekday"))
data2$days[is.weekend(data2$date)] <- as.factor("weekend")
data2$days[!is.weekend(data2$date)] <- as.factor("weekday")
class(data2$days)
View(data2)
library(ggplot2)
data3 <- tapply(data2$steps, c(data2$days, data2$interval), mean)
data3 <- ddply(data2, .(days, interval), mean)
warnings()
data3 <- ddply(data2, .(days, interval), mean_step = mean(steps))
View(data3)
data3 <- ddply(data2, .(days, interval), mean_step = mean(steps))
data3 <- ddply(data2, .(days, interval),summarize, mean_step = mean(steps))
View(data3)
library(ggplot2)
p <- ggplot(data3, aes(x = interval, y = mean_step)
+ geom_line(aes(colour = "blue"))
+ facet_grid(days ~.)
1
p
p + geom_line(aes(colour = "blue")) + facet_grid(days ~.)
p <- ggplot(data3, aes(x = interval, y = mean_step)
p + geom_line(aes(colour = "blue")) + facet_grid(days ~.)
p <- ggplot(data3, aes(x = interval, y = mean_step))
p + geom_line(aes(colour = "blue")) + facet_grid(days ~.)
p + geom_line(colour = "blue") + facet_grid(days ~.)
p + geom_line(colour = "blue") + facet_grid(days ~.) +labs(title="daily activity patterns",y="number of steps")
setwd("~/Desktop/Coursera/Reproducible research spring2014 JHU/RepData_PeerAssessment1")
knit2html(PA1_template.Rmd)
```{r knit_file, echo=FALSE}
knit2html("PA1_template.Rmd")
```
library(knitr)
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
